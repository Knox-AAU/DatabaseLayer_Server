# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Virtuoso

on:
  push:
    branches-ignore:
      - "main"

env:
  HOST : localhost
  PORT : 8890
  VIRTUOSO_SERVER_URL: http://localhost:8890/sparql

jobs:
  setup:
    runs-on: ubuntu-latest
    services:
      virtuoso:
        image: openlink/virtuoso-opensource-7:latest
        ports:
          - 8890:8890

    steps:
      - name: Set permissions for virtuoso db directory
        run: sudo chmod -R 777 ${{ github.workspace }}/knox_virtuoso_db || true

      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Setup Go
      #   uses: actions/setup-go@v2
      #   with:
      #     go-version: 1.21

      # - name: Sleep seconds
      #   run: sleep 15

      - name: Wait for virtuoso to start
        run: |
          wget -q https://github.com/vishnubob/wait-for-it/raw/master/wait-for-it.sh
          chmod +x wait-for-it.sh
          ./wait-for-it.sh localhost:8890 -t 15

      - name: Show /etc/hosts
        run: cat /etc/hosts

      - name: Check Virtuoso reachability
        run: ping -c 5 localhost

      - name: Test Virtuoso server
        id: test_virtuoso
        run: |
          OUTPUT=$(curl -s -H "Accept: application/json" -G --data-urlencode "query=select * where {?s ?p ?o} LIMIT 10" http://localhost:8890/sparql)
          echo "::set-output name=response::$OUTPUT"
        shell: bash


      # - name: Run Go Tests
      #   run: go test ./...