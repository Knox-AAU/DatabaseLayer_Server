# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Virtuoso

on:
  push:
    branches-ignore:
      - "main"

jobs:
  setup:
    runs-on: ubuntu-latest
    services:
      virtuoso:
        image: openlink/virtuoso-opensource-7:latest
        ports:
          - 8890:8890

    steps:
      - name: Set permissions for virtuoso db directory
        run: sudo chmod -R 777 ${{ github.workspace }}/knox_virtuoso_db || true

      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Sleep for 60 seconds
      #   run: sleep 30

      - name: Show /etc/hosts
        run: cat /etc/hosts

      - name: Check Virtuoso reachability
        run: ping -c 5 localhost

      - name: Test Virtuoso server
        id: test_virtuoso
        run: |
          OUTPUT=$(curl -s -H "Accept: application/json" -G --data-urlencode "query=select * where {?s ?p ?o} LIMIT 10" http://localhost:8890/sparql)
          echo "::set-output name=response::$OUTPUT"
        shell: bash

      - name: Check response
        id: check_response
        run: |
          OUTPUT="${{ steps.test_virtuoso.outputs.response }}"
          if [[ $OUTPUT == *"results"* ]]; then
            echo "Server is running and responded correctly"
          else
            echo OUTPUT
            echo "Server is not responding or there was an error in the response"
            exit 1
          fi
        shell: bash
