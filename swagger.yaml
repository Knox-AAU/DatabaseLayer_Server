basePath: /
consumes:
    - application/json
definitions:
    BindingAttribute:
        properties:
            Type:
                type: string
            Value:
                type: string
        type: object
        x-go-package: github.com/Knox-AAU/DatabaseLayer_Server/pkg/graph
    GetTriple:
        properties:
            o:
                $ref: '#/definitions/BindingAttribute'
            p:
                $ref: '#/definitions/BindingAttribute'
            s:
                $ref: '#/definitions/BindingAttribute'
        title: GetTriple requires the json tags to match with the queries that are used to retrieve it.
        type: object
        x-go-package: github.com/Knox-AAU/DatabaseLayer_Server/pkg/graph
    PostBody:
        properties:
            triples:
                description: |-
                    Triples is an array of triples.
                    Each triple's first element is the subject, second is the predicate and third is the object.
                    Only accepts exactly 3 elements per triple.
                items:
                    items:
                        type: string
                    type: array
                type: array
                x-go-name: Triples
        required:
            - triples
        type: object
        x-go-package: github.com/Knox-AAU/DatabaseLayer_Server/pkg/graph
    Result:
        properties:
            query:
                type: string
                x-go-name: Query
            triples:
                items:
                    $ref: '#/definitions/GetTriple'
                type: array
                x-go-name: Triples
        type: object
        x-go-package: github.com/Knox-AAU/DatabaseLayer_Server/pkg/http/rest
host: localhost:8080
info:
    description: This package implements a REST HTTP API to facilitate communication with the KNOX database.
    title: Database Layer Server API.
    version: 0.0.1
paths:
    /knowledge-base:
        get:
            description: To query the whole graph, leave all parameters empty.
            operationId: getKnowledgeBase
            parameters:
                - description: Subjects
                  in: query
                  items:
                    type: string
                  name: s
                  type: array
                - description: Objects
                  in: query
                  items:
                    type: string
                  name: o
                  type: array
                - description: Predicates
                  in: query
                  items:
                    type: string
                  name: p
                  type: array
            produces:
                - application/json
            responses:
                "200":
                    description: filtered triples response
                    schema:
                        $ref: '#/definitions/Result'
            summary: This endpoint allows for querying with filters.
        post:
            description: If a new predicate is sent with an existing subject, will the existing subject be updated with the new predicate.
            operationId: UpsertKnowledgeBase
            parameters:
                - description: Triples to insert
                  in: body
                  name: triples
                  required: true
                  schema:
                    $ref: '#/definitions/PostBody'
            produces:
                - application/json
            responses:
                "200":
                    description: response with produced insert query
                    schema:
                        $ref: '#/definitions/Result'
            summary: This endpoint allows for insertion or updating of triples.
    /ontology:
        get:
            description: To query the whole graph, leave all parameters empty.
            operationId: getOntology
            parameters:
                - description: Subjects
                  in: query
                  items:
                    type: string
                  name: s
                  type: array
                - description: Objects
                  in: query
                  items:
                    type: string
                  name: o
                  type: array
                - description: Predicates
                  in: query
                  items:
                    type: string
                  name: p
                  type: array
            produces:
                - application/json
            responses:
                "200":
                    description: filtered triples response
                    schema:
                        $ref: '#/definitions/Result'
            summary: This endpoint allows for querying with filters.
        post:
            description: If a new predicate is sent with an existing subject, will the existing subject be updated with the new predicate.
            operationId: UpsertOntology
            parameters:
                - description: Triples to insert
                  in: body
                  name: triples
                  required: true
                  schema:
                    $ref: '#/definitions/PostBody'
            produces:
                - application/json
            responses:
                "200":
                    description: response with produced insert query
                    schema:
                        $ref: '#/definitions/Result'
            summary: This endpoint allows for insertion or updating of triples.
produces:
    - application/json
schemes:
    - http
swagger: "2.0"
